{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "#GraphObject",
  "description": "The standard metadata properties of a given entity/relationship. These properties are system generated (e.g. set by an integration).  They are viewable in the UI but not directly editable by a user.",
  "type": "object",
  "propertyNames": {
    "pattern": "^(_|tag\\.)?[A-Za-z0-9. -]+$"
  },
  "properties": {
    "_key": {
      "description": "A unique identifier of an entity/relationship within the scope of a single integration instance. For example, for a Bitbucket repo, this _id will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, the _id will be the ARN of the role.",
      "type": "string",
      "minLength": 10
    },
    "_class": {
      "description": "Used to create an abstract security data model. For example, a EC2 instance will have '_class':'Host'. An integration can supply one or more classes which can be used to indicate if a particular entity/relationship conforms to one or more standard classifications. This property is similar to _type except that _class refers to a type that has been standardized while _type is an entity type that only has to be unique in the scope of the provider. It is possible that an entity/relationship has a _type value but no _class value in cases where there is no standard classification for a given entity/relationship.",
      "oneOf": [
        {
          "type": "string",
          "minLength": 2
        },
        {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "minLength": 2
          }
        }
      ]
    },
    "_type": {
      "description": "Describes the type of entity/relationship as identified by the data source (often the integration or sometimes manual user input). The _class property is similar to _type but _class refers to a categorization that has been standardized and it is not unique to a single data integration.",
      "type": "string",
      "minLength": 5
    }
  },
  "patternProperties": {
    "^tag\\.": { "type": "string" }
  },
  "required": ["_key", "_class", "_type"]
}
