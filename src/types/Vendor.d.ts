/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * An external organization that is a vendor or service provider.
 */
export type Vendor = Entity & {
  /**
   * The category of vendor.
   */
  category: string | string[];
  /**
   * The vendor's main website URL.
   */
  website?: string;
  /**
   * List of business departments the vendor provides service for (e.g. IT, HR, Finance, Marketing, Development/Engineering, Security).
   */
  departments?: string[];
  /**
   * The email domain for the vendor (e.g. @jupiterone.io).
   */
  emailDomain?: string;
  /**
   * The vendor's point of contact person.
   */
  mainContactName?: string;
  /**
   * Email of the vendor's point of contact person.
   */
  mainContactEmail?: string;
  /**
   * Phone number of the vendor's point of contact person.
   */
  mainContactPhone?: string;
  /**
   * Main physical/mailing address of the vendor.
   */
  mainContactAddress?: string;
  /**
   * The title of the vendor's main point of contact. For example, 'Manager of Operations'.
   */
  mainContactTitle?: string;
  /**
   * The vendor's alternate/secondary point of contact person.
   */
  alternateContactName?: string;
  /**
   * Email of the vendor's alternate/secondary point of contact person.
   */
  alternateContactEmail?: string;
  /**
   * Phone number of the vendor's alternate/secondary point of contact person.
   */
  alternateContactPhone?: string;
  /**
   * Alternate/secondary physical/mailing address of the vendor.
   */
  alternateContactAddress?: string;
  /**
   * The title of the vendor's alternate/secondary point of contact. For example, 'CISO'.
   */
  alternateContactTitle?: string;
  /**
   * List of admin users to the vendor account, if applicable. If this vendor account is integrated directly to JupiterOne and its data is ingested, the admin users should be already mapped as User entities.
   */
  admins?: string[];
  /**
   * The number of days the vendor agrees to report an identified data breach, per vendor agreement and/or SLA. This is typically 3 to 30 days. Note that GDPR requires breach notification within 3 days / 72 hours.
   */
  breachResponseDays?: number;
  /**
   * Link to Non-Disclosure Agreement (NDA) document.
   */
  linkToNDA?: string;
  /**
   * Link to Master Service Agreement (MSA) document.
   */
  linkToMSA?: string;
  /**
   * Link to Service Level Agreement (SLA) document.
   */
  linkToSLA?: string;
  /**
   * Link to Business Associate Agreement (BAA) document - for HIPAA only.
   */
  linkToBAA?: string;
  /**
   * Link to GDPR Data Processing Addendum (DPA) document - for GDPR only.
   */
  linkToDPA?: string;
  /**
   * Link to the external vendor technology risk (VTR) report.
   */
  linkToVTR?: string;
  /**
   * Link to the external information security assessment (ISA) report.
   */
  linkToISA?: string;
  /**
   * Link to the vendor's service status page (e.g. https://status.aws.amazon.com/).
   */
  statusPage?: string;
  /**
   * The timestamp (in milliseconds since epoch) of when this vendor was last validated per the vendor management policy.
   */
  validatedOn?: number;
  [k: string]: unknown;
};
/**
 * A node in the graph database that represents an Entity. This reference schema defines common shared properties among most Entities.
 */
export type Entity = {
  [k: string]: unknown;
} & {
  /**
   * Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.
   */
  id?: string | string[];
  /**
   * Name of this entity
   */
  name: string;
  /**
   * Display name, e.g. a person's preferred name or an AWS account alias
   */
  displayName: string;
  /**
   * A summary / short description of this entity.
   */
  summary?: string;
  /**
   * An extended description of this entity.
   */
  description?: string;
  /**
   * The sensitivity of the data; should match company data classification scheme
   */
  classification?: string | null;
  /**
   * A number that represents the value or criticality of this entity, on a scale between 1-10.
   */
  criticality?: number;
  /**
   * The risk level of this entity, on a scale between 1-10.
   */
  risk?: number;
  /**
   * The trust level of this entity, on a scale between 1-10.
   */
  trust?: number;
  /**
   * The compliance status of the entity, as a percentage of compliancy.
   */
  complianceStatus?: number;
  /**
   * Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned
   */
  status?: string;
  /**
   * Indicates if this entity is currently active.
   */
  active?: boolean;
  /**
   * Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.
   */
  public?: boolean;
  /**
   * Indicates if this node has been validated as a known/valid Entity.
   */
  validated?: boolean;
  /**
   * Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.
   */
  temporary?: boolean;
  /**
   * Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.
   */
  trusted?: boolean;
  /**
   * The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.
   */
  createdOn?: number;
  /**
   * The timestamp (in milliseconds since epoch) when the entity was last updated at the source.
   */
  updatedOn?: number;
  /**
   * The timestamp (in milliseconds since epoch) when the entity was deleted at the source.
   */
  deletedOn?: number;
  /**
   * The timestamp (in milliseconds since epoch) when the entity was discovered.
   */
  discoveredOn?: number;
  /**
   * If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.
   */
  expiresOn?: number;
  /**
   * The source/principal/user that created the entity
   */
  createdBy?: string;
  /**
   * The source/principal/user that updated the entity
   */
  updatedBy?: string;
  /**
   * The source/principal/user that deleted the entity
   */
  deletedBy?: string;
  /**
   * The source/principal/user that discovered the entity
   */
  discoveredBy?: string;
  /**
   * Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.
   */
  webLink?: string;
  /**
   * The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.
   */
  owner?: string;
  /**
   * An array of unnamed tags
   */
  tags?: string[];
  /**
   * User provided notes about this entity
   */
  notes?: string[];
  [k: string]: unknown;
};
