{
  "#AccessKey": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#AccessKey",
    "description": "A key used to grant access, such as ssh-key, access-key, api-key/token, mfa-token/device, etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "fingerprint": {
        "description": "The fingerprint that identifies the key",
        "type": "string",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "material": {
        "description": "The key material",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "usage": {
        "description": "The key usage - for example: ssh access or data encryption",
        "type": "string",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#AccessPolicy": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#AccessPolicy",
    "description": "A policy for access control assigned to a Host, Role, User, UserGroup, or Service.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "admin": {
        "description": "Indicates if the policy grants administrative privilege.",
        "type": "boolean"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "content": {
        "description": "Content of a policy contains the raw policy rules, if applicable. For example, the JSON text of an AWS IAM Policy. This is stored in raw data.",
        "type": "string"
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "rules": {
        "description": "Rules of this policy. Each rule is written 'as-code' that can be operationalized with a control provider or within JupiterOne's rules engine.",
        "type": "array",
        "items": { "type": "string" }
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#AccessRole": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#AccessRole",
    "description": "An access control role mapped to a Principal (e.g. user, group, or service).",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "privilegeNames": {
        "description": "The role's privilege names",
        "type": "array",
        "items": { "type": "string" }
      },
      "privilegeServiceIds": {
        "description": "The role's privilege service IDs",
        "type": "array",
        "items": { "type": "string" }
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "superAdmin": {
        "description": "Is the role an administrator role?",
        "type": "boolean"
      },
      "systemRole": {
        "description": "Is this a system role?",
        "type": "boolean"
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Account": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Account",
    "description": "An organizational account for a service or a set of services (e.g. AWS, Okta, Bitbucket Team, Google G-Suite account, Apple Developer Account). Each Account should be connected to a Service.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "accessURL": {
        "description": "The main URL to access this account, e.g. https://jupiterone.okta.com",
        "type": "string",
        "format": "uri"
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "mfaEnabled": {
        "description": "Specifies whether multi-factor authentication (MFA) is enabled/required for users of this account.",
        "type": "boolean"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Alert": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Alert",
    "description": "A notice of any unusual or dangerous circumstance that is sent to responsible parties for the purpose of triggering action.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Application": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Application",
    "description": "A software product or application.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "alternateURLs": {
        "description": "The additional URLs related to this application.",
        "type": "array",
        "items": { "type": "string" }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "COTS": {
        "description": "Indicates if this is a Commercial Off-The-Shelf software application. Custom in-house developed application should have this set to false.",
        "type": "boolean",
        "default": false
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "devURL": {
        "description": "The Development URL",
        "type": "string",
        "format": "uri"
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "external": {
        "description": "Indicates if this is an externally acquired software application. Custom in-house developed application should have this set to false.",
        "type": "boolean",
        "default": false
      },
      "FOSS": {
        "description": "Indicates if this is a Free or Open-Source software application or library. Custom in-house developed application should have this set to false.",
        "type": "boolean",
        "default": false
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "license": {
        "description": "Stores the type of license",
        "type": "string",
        "examples": [
          "BSD",
          "CC-BY-3.0",
          "CC-BY-4.0",
          "GPL-2.0",
          "GPL-3.0",
          "LGPL-2.0",
          "LGPL-2.1",
          "LGPL-3.0",
          "MIT",
          "EULA",
          "Proprietary",
          "UNLICENSED",
          "other"
        ]
      },
      "licenseURL": {
        "description": "The URL to the full license",
        "type": "string",
        "format": "uri"
      },
      "mobile": {
        "description": "Indicates if this is a mobile app.",
        "type": "boolean",
        "default": false
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "productionURL": {
        "description": "The Production URL",
        "type": "string",
        "format": "uri"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "SaaS": {
        "description": "Indicates if this is a Software-as-a-Service product.",
        "type": "boolean",
        "default": false
      },
      "stagingURL": {
        "description": "The Non-Production / Staging URL",
        "type": "string",
        "format": "uri"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "testURL": {
        "description": "The Test URL",
        "type": "string",
        "format": "uri"
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#ApplicationEndpoint": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#ApplicationEndpoint",
    "description": "An application endpoint is a program interface that either initiates or receives a request, such as an API.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "address": {
        "description": "The endpoint address (e.g. an URI/URL, hostname)",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Assessment": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Assessment",
    "description": "An object to represent an assessment, including both compliance assessment such as a HIPAA Risk Assessment or a technical assessment such as a Penetration Testing. Each assessment should have findings (e.g. Vulnerability or Risk) associated.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "assessor": {
        "description": "Email or name or ID of the assessor",
        "type": "string"
      },
      "assessors": {
        "description": "List of email or name or ID of the assessors",
        "type": "array",
        "items": { "type": "string" }
      },
      "category": {
        "description": "The category of the Assessment.",
        "type": "string",
        "examples": [
          "Risk Assessment",
          "Readiness Assessment",
          "Gap Assessment",
          "Validation Assessment",
          "Compliance Assessment",
          "Self Assessment",
          "Certification",
          "Audit",
          "Technical Review",
          "Operational Review",
          "Penetration Testing",
          "Vulnerability Scan",
          "Other"
        ]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "completedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the Assessment was completed.",
        "type": "number",
        "format": "date-time"
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "internal": {
        "description": "Indicates if this is an internal or external assessment/audit. Defaults to true.",
        "type": "boolean",
        "default": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "reportURL": {
        "description": "Link to the assessment report, if available.",
        "type": "string",
        "format": "uri"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "startedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the Assessment was started.",
        "type": "number",
        "format": "date-time"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "The summary description of the Assessment.",
        "type": "string"
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Attacker": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Attacker",
    "description": "An attacker or threat actor.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Backup": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Backup",
    "description": "A specific repository or data store containing backup data.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "Indicates whether the backup data is encrypted.",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Certificate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Certificate",
    "description": "A digital Certificate such as an SSL or S/MIME certificate.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Channel": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Channel",
    "description": "A communication channel, such as a Slack channel or AWS SNS topic.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "Indicates whether the communication channel is encrypted.",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Cluster": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Cluster",
    "description": "A cluster of compute or database resources/workloads.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#CodeCommit": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#CodeCommit",
    "description": "A code commit to a repo. The commit id is captured in the _id property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "branch": {
        "description": "The branch the code was committed to.",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "merge": {
        "description": "Indicates if this commit is a merge, defaults to false.",
        "type": "boolean",
        "default": false
      },
      "message": { "description": "The commit message.", "type": "string" },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "versionBump": {
        "description": "Indicates if this commit is a versionBump, defaults to false.",
        "type": "boolean",
        "default": false
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#CodeDeploy": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#CodeDeploy",
    "description": "A code deploy job.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "action": {
        "description": "Deploy action (e.g. plan, apply, destroy, rollback).",
        "type": "string"
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "jobName": { "description": "Build/deploy job name.", "type": "string" },
      "jobNumber": {
        "description": "Build/deploy job number.",
        "type": "integer"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "Indicates if this is a production deploy, defaults to true.",
        "type": "boolean",
        "default": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "Descriptive text of the job.",
        "type": "string"
      },
      "target": {
        "description": "Name of the target system or environment.",
        "type": "string"
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#CodeModule": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#CodeModule",
    "description": "A software module. Such as an npm_module or java_library.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public module.",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#CodeRepo": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#CodeRepo",
    "description": "A source code repository. A CodeRepo is also a DataRepository therefore should carry all the required properties of DataRepository.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "application": {
        "description": "The application that this repo is part of.",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "project": {
        "description": "The project that this repo belongs to.",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public repo.",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#CodeReview": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#CodeReview",
    "description": "A code review record.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "state": { "description": "The state of the review.", "type": "string" },
      "summary": {
        "description": "The summary text of the review.",
        "type": "string"
      },
      "title": {
        "description": "The title text of the review.",
        "type": "string"
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Configuration": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Configuration",
    "description": "A Configuration contains definitions that describe a resource such as a Task, Deployment or Workload. For example, an `aws_ecs_task_definition` is a `Configuration`.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Container": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Container",
    "description": "A standard unit of software that packages up code and all its dependencies and configurations.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "dockerVersion": {
        "description": "The version of the Docker Engine",
        "type": "string"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "image": {
        "description": "The container image that the container is built from",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Control": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Control",
    "description": "A security or IT Control. A control can be implemented by a vendor/service, a person/team, a program/process, an automation code/script/configuration, or a system/host/device. Therefore, this is most likely an additional Class applied to a Service (e.g. Okta SSO), a Device (e.g. a physical firewall), or a HostAgent (e.g. Carbon Black CbDefense Agent). Controls are mapped to security policy procedures and compliance standards/requirements.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "function": {
        "description": "The function of the control. It can be a string or string array. Value of each item should be either all lower case or, in the case of an acronym, all upper case.",
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "directory",
              "inventory",
              "access-control",
              "access-review",
              "compliance",
              "monitoring",
              "logging",
              "auditing",
              "scheduling",
              "configuration-audit",
              "key-management",
              "password-management",
              "secret-management",
              "config-management",
              "device-management",
              "patch-management",
              "endpoint-management",
              "endpoint-protection",
              "data-protection",
              "data-encryption",
              "pen-test",
              "bug-bounty",
              "appsec",
              "application-security",
              "container-security",
              "package-registry",
              "infrastructure",
              "ticketing",
              "training",
              "firewall",
              "networking",
              "wifi",
              "physical-access",
              "video-surveillance",
              "DNS",
              "VPN",
              "IAM",
              "SSO",
              "MFA",
              "PAM",
              "DLP",
              "SAST",
              "DAST",
              "IAST",
              "MAST",
              "RASP",
              "SCA",
              "SCM",
              "VAS",
              "VMS",
              "AV",
              "CA",
              "PKI",
              "IDS",
              "IPS",
              "HIDS",
              "NIDS",
              "WAF",
              "MDM",
              "EMM",
              "EDR",
              "EPP",
              "SIEM",
              "ITAM",
              "ITSM",
              "SSH",
              "SFTP",
              "VRM"
            ]
          },
          {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "directory",
                "inventory",
                "access-control",
                "access-review",
                "compliance",
                "monitoring",
                "logging",
                "auditing",
                "scheduling",
                "configuration-audit",
                "key-management",
                "password-management",
                "secret-management",
                "config-management",
                "device-management",
                "patch-management",
                "endpoint-management",
                "endpoint-protection",
                "data-protection",
                "data-encryption",
                "pen-test",
                "bug-bounty",
                "appsec",
                "application-security",
                "container-security",
                "package-registry",
                "infrastructure",
                "ticketing",
                "training",
                "firewall",
                "networking",
                "wifi",
                "physical-access",
                "video-surveillance",
                "DNS",
                "VPN",
                "IAM",
                "SSO",
                "MFA",
                "PAM",
                "DLP",
                "SAST",
                "DAST",
                "IAST",
                "MAST",
                "RASP",
                "SCA",
                "SCM",
                "VAS",
                "VMS",
                "AV",
                "CA",
                "PKI",
                "IDS",
                "IPS",
                "HIDS",
                "NIDS",
                "WAF",
                "MDM",
                "EMM",
                "EDR",
                "EPP",
                "SIEM",
                "ITAM",
                "ITSM",
                "SSH",
                "SFTP",
                "VRM"
              ]
            }
          }
        ]
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#ControlPolicy": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#ControlPolicy",
    "description": "An technical or operational policy with rules that govern (or enforce, evaluate, monitor) a security control.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of policy.",
        "type": "string",
        "enum": ["compliance", "config", "password", "other"]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "content": {
        "description": "Contents of the raw rules, if applicable.",
        "type": "string"
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "rules": {
        "description": "Rules of policy.",
        "type": "array",
        "items": { "type": "string" }
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#CryptoKey": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#CryptoKey",
    "description": "A key used to perform cryptographic functions, such as an encryption key.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "fingerprint": {
        "description": "The fingerprint that identifies the key",
        "type": "string",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "material": {
        "description": "The key material",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "usage": {
        "description": "The key usage - for example: ssh access or data encryption",
        "type": "string",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#DataCollection": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#DataCollection",
    "description": "An individual collection of data. The collection may exist in various formats, such as a table (e.g. a MySQL table). The exact data type is described in the _type property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "If the data in the table is encrypted",
        "type": "boolean"
      },
      "encryptionRequired": {
        "description": "If the objects in the table need to be encrypted",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "PCI": {
        "description": "Indicates if this data table contains Payment Card Information",
        "type": "boolean"
      },
      "PHI": {
        "description": "Indicates if this data table contains Protected Health Information",
        "type": "boolean"
      },
      "PII": {
        "description": "Indicates if this data table contains Personally Identifiable Information",
        "type": "boolean"
      },
      "public": {
        "description": "Indicates if the data table is open to public access",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#DataObject": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#DataObject",
    "description": "An individual data object, such as an aws-s3-object, sharepoint-document, source-code, or a file (on disk). The exact data type is described in the _type property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "A user-provided category of the data, such as 'Source Code', 'Report', 'Patent Application', 'Business Plan', 'Customer Record', 'Genetic Data', etc.",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "If the data is encrypted",
        "type": "boolean"
      },
      "encryptionRequired": {
        "description": "If the data needs to be encrypted",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "format": {
        "description": "The format of the data, such as 'document', 'raw', 'plaintext', 'binary', etc.",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "location": {
        "description": "URI to the data, e.g. file path",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "PCI": {
        "description": "Indicates if this data object is or contains Payment Card Information",
        "type": "boolean"
      },
      "PHI": {
        "description": "Indicates if this data object is or contains Protected Health Information",
        "type": "boolean"
      },
      "PII": {
        "description": "Indicates if this data object is or contains Personally Identifiable Information",
        "type": "boolean"
      },
      "public": {
        "description": "Indicates if the data object is open to public access",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#DataStore": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#DataStore",
    "description": "A virtual repository where data is stored, such as aws-s3-bucket, aws-rds-cluster, aws-dynamodb-table, bitbucket-repo, sharepoint-site, docker-registry. The exact type is described in the _type property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "If the data store is encrypted",
        "type": ["boolean", "null"]
      },
      "encryptionAlgorithm": {
        "description": "Encryption algorithm used to encrypt the data store",
        "type": "string"
      },
      "encryptionKeyRef": {
        "description": "Reference to the encryption key used to encrypt the data store",
        "type": "string"
      },
      "encryptionRequired": {
        "description": "If the data needs to be encrypted",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "hasBackup": {
        "description": "Indicates if the data store is data backup has been configured/enabled.",
        "type": "boolean"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "location": {
        "description": "URI to the data store, e.g. https://docker-registry.jupiterone.com or https://jupiterone.sharepoint.com. Or a description to the physical location.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if the data store is open to public access",
        "type": "boolean"
      },
      "retentionPeriodDays": {
        "description": "The number of days for which data is retained",
        "type": "number"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Database": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Database",
    "description": "A database cluster/instance.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "If the repository is encrypted",
        "type": ["boolean", "null"]
      },
      "encryptionRequired": {
        "description": "If the data needs to be encrypted",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "location": {
        "description": "URI to access the database.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Deployment": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Deployment",
    "description": "A deployment of code, application, infrastructure or service. For example, a Kubernetes deployment. An auto scaling group is also considered a deployment.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "currentSize": {
        "description": "Current size (i.e. number of instances) active with this deployment.",
        "type": "number"
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "desiredSize": {
        "description": "Desired size (i.e. number of instances) associated with this deployment.",
        "type": "number"
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "maxSize": {
        "description": "Maximum size (i.e. number of instances) limited by this deployment.",
        "type": "number"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Device": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Device",
    "description": "A physical device or media, such as a server, laptop, workstation, smartphone, tablet, router, firewall, switch, wifi-access-point, usb-drive, etc. The exact data type is described in the _type property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "assetTag": {
        "description": "The asset tag number/label that matches the identifier in asset tracking system, for company owned physical devices",
        "type": "string"
      },
      "autoSecurityPatchEnabled": {
        "description": "Indicates if security updates are auto-installed",
        "type": "boolean",
        "default": false
      },
      "autoSystemPatchEnabled": {
        "description": "Indicates if operating system updates are auto-installed",
        "type": "boolean",
        "default": false
      },
      "BYOD": {
        "description": "Indicates if this is a BYOD device -- an employee-provided device that has access to company systems/resources.",
        "type": "boolean",
        "default": false
      },
      "category": {
        "description": "The device category",
        "type": ["string", "null"],
        "examples": [
          "server",
          "endpoint",
          "storage-media",
          "mobile",
          "network",
          "other"
        ]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "cost": {
        "description": "The purchase cost of the device.",
        "type": "number"
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "deviceId": {
        "description": "The unique device identifier, traditionally known as a UDID",
        "type": ["string", "null"]
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "Indicates if the primary device storage is encrypted",
        "type": "boolean",
        "default": false
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "firewallEnabled": {
        "description": "Indicates if local/host firewall is enabled",
        "type": "boolean",
        "default": false
      },
      "hardwareModel": {
        "description": "The device hardware model, e.g. MacBookPro13,3",
        "type": "string"
      },
      "hardwareSerial": {
        "description": "The device serial number",
        "type": "string"
      },
      "hardwareVendor": {
        "description": "The manufacturer or vendor of the device, e.g. Apple Inc., Generic",
        "type": "string"
      },
      "hardwareVersion": {
        "description": "The device hardware version",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "lastSeenOn": {
        "description": "The timestamp (in milliseconds since epoch) when the device either last checked in or was scanned.",
        "type": ["number", "null"],
        "format": "date-time"
      },
      "location": {
        "description": "Site where this device is located.",
        "type": "string"
      },
      "make": {
        "description": "Same as hardwareVendor: The manufacturer or vendor of the device, e.g. Apple Inc., Generic",
        "type": ["string", "null"]
      },
      "malwareProtected": {
        "description": "Indicates if malware protection is enabled",
        "type": "boolean",
        "default": false
      },
      "model": {
        "description": "Same as hardwareModel: The device hardware model, e.g. MacBookPro13,3",
        "type": ["string", "null"]
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "osDetails": {
        "description": "Operating System Full Details (e.g. macOS High Sierra version 10.13.6)",
        "type": "string"
      },
      "osName": {
        "description": "Operating System Name (e.g. macOS)",
        "type": "string"
      },
      "osVersion": {
        "description": "Operating System Version (e.g. 10.13.6)",
        "type": "string"
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "platform": {
        "description": "Operating System Platform",
        "type": "string",
        "enum": [
          "darwin",
          "linux",
          "unix",
          "windows",
          "android",
          "ios",
          "embedded",
          "other"
        ]
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "remoteAccessEnabled": {
        "description": "Indicates if remote access/login to the device is enabled",
        "type": "boolean",
        "default": false
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "screenLockEnabled": {
        "description": "Indicates if screen lock protection is enabled",
        "type": "boolean",
        "default": false
      },
      "screenLockTimeout": {
        "description": "Screen lock timeout in seconds",
        "type": "number"
      },
      "serial": {
        "description": "Same as hardwareSerial: The device serial number",
        "type": ["string", "null"]
      },
      "status": {
        "description": "Status label of this device",
        "type": "string",
        "enum": [
          "assigned",
          "archived",
          "decommissioned",
          "defective",
          "deployed",
          "disposed",
          "locked",
          "lost/stolen",
          "pending",
          "ready",
          "unknown",
          "other"
        ]
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "userEmails": {
        "description": "The email addresses of the users this device is assigned to. Used if the device is shared by more than one user. Otherwise the 'owner' is the sole user. Leave empty/undefined if the device is unassigned.",
        "type": "array",
        "items": { "type": "string", "format": "email" }
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "value": {
        "description": "The estimated business value of the device. The value is typically calculated as the monetary cost of the device + the value of data on the device.",
        "type": "number"
      },
      "version": {
        "description": "Same as hardwareVersion: The device hardware version",
        "type": "string"
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Directory": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Directory",
    "description": "Directory, such as LDAP or Active Directory.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "directoryServers": {
        "description": "List of directory servers.",
        "type": "array",
        "items": { "type": "string" }
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "domainControllers": {
        "description": "List of domain controllers.",
        "type": "array",
        "items": { "type": "string" }
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "parent": {
        "description": "Parent directory, if the entity is a sub-directory.",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "type": {
        "description": "Directory type.",
        "type": "string",
        "examples": ["LDAP", "AD"]
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Disk": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Disk",
    "description": "A disk storage device such as an AWS EBS volume",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "If the data store is encrypted",
        "type": ["boolean", "null"],
        "inherited": true
      },
      "encryptionAlgorithm": {
        "description": "Encryption algorithm used to encrypt the data store",
        "type": "string",
        "inherited": true
      },
      "encryptionKeyRef": {
        "description": "Reference to the encryption key used to encrypt the data store",
        "type": "string",
        "inherited": true
      },
      "encryptionRequired": {
        "description": "If the data needs to be encrypted",
        "type": "boolean",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "hasBackup": {
        "description": "Indicates if the data store is data backup has been configured/enabled.",
        "type": "boolean",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "location": {
        "description": "URI to the data store, e.g. https://docker-registry.jupiterone.com or https://jupiterone.sharepoint.com. Or a description to the physical location.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if the data store is open to public access",
        "type": "boolean",
        "inherited": true
      },
      "retentionPeriodDays": {
        "description": "The number of days for which data is retained",
        "type": "number",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Document": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Document",
    "description": "A document or data object.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "product": {
        "description": "The name of the product this document is applicable to. This reference is used when the document is product related, such as a product requirement document (PRD) or software bill-of-materials (SBOM).",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "version": {
        "description": "The version of this document.",
        "type": "string"
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Domain": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Domain",
    "description": "An internet domain.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "abuseContactEmail": {
        "description": "Abuse contact email.",
        "type": "string"
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "adminContactEmail": {
        "description": "Administrative contact email.",
        "type": "string"
      },
      "autoRenew": {
        "description": "Indicates whether auto-renewal is configured.",
        "type": "boolean"
      },
      "billingContactEmail": {
        "description": "Billing contact email.",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "contactEmails": {
        "description": "List of contact emails.",
        "type": "array",
        "items": { "type": "string" }
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "domainName": { "description": "Domain name.", "type": "string" },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "locked": {
        "description": "Indicates whether domain transfer is locked/protected.",
        "type": "boolean"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "nameservers": {
        "description": "List of nameservers.",
        "type": "array",
        "items": { "type": "string" }
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "parent": {
        "description": "Parent domain, if the entity is a sub-domain.",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "registrantContactEmail": {
        "description": "Registrant contact email.",
        "type": "string"
      },
      "registrar": {
        "description": "Domain registrar where this domain is registered.",
        "type": "string"
      },
      "registrarName": {
        "description": "Domain registrar name.",
        "type": "string"
      },
      "registrarUrl": {
        "description": "Domain registrar URL.",
        "type": "string"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "techContactEmail": {
        "description": "Technical contact email.",
        "type": "string"
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      },
      "whoisServer": {
        "description": "WHOIS server that is responsible for resolving the details of this domain.",
        "type": "string"
      }
    }
  },
  "#DomainRecord": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#DomainRecord",
    "description": "The DNS Record of a Domain Zone.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "TTL": {
        "description": "Time to Live before resolver cache expires.",
        "type": "number"
      },
      "type": {
        "description": "DNS Record type.",
        "type": "string",
        "enum": [
          "A",
          "AAAA",
          "ALIAS",
          "CAA",
          "CERT",
          "CNAME",
          "DNSKEY",
          "DS",
          "LOC",
          "MX",
          "NX",
          "NS",
          "NAPTR",
          "PTR",
          "SMIMEA",
          "SOA",
          "SPF",
          "SRV",
          "SSHFP",
          "TLSA",
          "TXT",
          "URI"
        ]
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "value": {
        "description": "The record value. Could be referenced as `data`, `content`, `resourceRecords`, `aliasTarget` or another property name depending on the DNS provider.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ]
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#DomainZone": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#DomainZone",
    "description": "The DNS Zone of an Internet Domain.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "domainName": { "description": "Domain name.", "type": "string" },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "parent": {
        "description": "Parent domain, if the entity is a sub-domain.",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "recordsCount": {
        "description": "Total number of DNS records in this zone.",
        "type": "number"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Entity": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Entity",
    "description": "A node in the graph database that represents an Entity. This reference schema defines common shared properties among most Entities.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"]
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string"
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time"
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string"
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time"
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string"
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string"
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time"
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ]
      },
      "name": { "description": "Name of this entity", "type": "string" },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" }
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ]
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string"
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" }
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean"
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean"
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string"
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time"
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean"
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri"
      }
    }
  },
  "#Finding": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Finding",
    "description": "A security finding, which may be a vulnerability or just an informative issue. A single finding may impact one or more resources. The `IMPACTS` relationship between the Vulnerability and the resource entity that was impacted serves as the record of the finding. The `IMPACTS` relationship carries properties such as 'identifiedOn', 'remediatedOn', 'remediationDueOn', 'issueLink', etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "assessment": {
        "description": "The name/id of the assessment that produced this finding.",
        "type": "string"
      },
      "blocksProduction": {
        "description": "Indicates whether this vulnerability finding is a blocking issue. If true, it should block a production deploy. Defaults to false.",
        "type": "boolean",
        "default": false
      },
      "category": {
        "description": "The category of the finding.",
        "anyOf": [
          { "type": "string" },
          {
            "type": "array",
            "items": { "type": "string" },
            "examples": [
              "data",
              "application",
              "host",
              "network",
              "endpoint",
              "malware",
              "event"
            ]
          }
        ]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "exploitability": {
        "description": "The exploitability score/rating.",
        "type": "number"
      },
      "impact": {
        "description": "The impact description or rating.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "numericSeverity": {
        "description": "Severity rating based on impact and exploitability.",
        "type": "number",
        "examples": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      },
      "open": {
        "description": "Indicates if this is an open vulnerability.",
        "type": "boolean"
      },
      "priority": {
        "description": "Priority level mapping to Severity rating. Can be a string such as 'critical', 'high', 'medium', 'low', 'info'.  Or an integer usually between 0-5.",
        "type": "string"
      },
      "production": {
        "description": "Indicates if this vulnerability is in production.",
        "type": "boolean"
      },
      "public": {
        "description": "Indicates if this is a publicly disclosed vulnerability. If yes, this is usually a CVE and the 'webLink' should be set to 'https://nvd.nist.gov/vuln/detail/${CVE-Number}' or to a vendor URL. If not, it is most likely a custom application vulnerability.",
        "type": "boolean"
      },
      "recommendation": {
        "description": "Recommendation on how to remediate/fix this finding.",
        "type": "string"
      },
      "references": {
        "description": "The array of links to references.",
        "type": "array",
        "items": { "type": "string" }
      },
      "remediationSLA": {
        "description": "The number of days that the Vulnerability must be remediated within, based on SLA set by the organization's internal vulnerability management program policy. The actually due date is set by 'remediationDueOn' property on the `IMPACTS` relationship between the Vulnerability and its impacted resource entity.",
        "type": "integer"
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "score": {
        "description": "The overall vulnerability score, e.g. CVSSv3.",
        "type": "number"
      },
      "severity": {
        "description": "Severity rating based on impact and exploitability.",
        "type": "string",
        "examples": [
          "none",
          "informational",
          "low",
          "medium",
          "high",
          "critical"
        ]
      },
      "status": {
        "description": "Status of the vulnerability",
        "type": "string"
      },
      "stepsToReproduce": {
        "description": "Steps to reproduce this finding.",
        "type": "array",
        "items": { "type": "string" }
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "targetDetails": {
        "description": "Additional details about the targets. Can be a string or an array.",
        "type": "array",
        "items": { "type": "string" }
      },
      "targets": {
        "description": "The target listing of projects, applications, repos or systems this vulnerability impacts. Specifying either the project/repo name or the application URL here will auto-map this Vulnerability to the corresponding Project/CodeRepo/Application entity if a match is found.",
        "type": "array",
        "items": { "type": "string" }
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this Vulnerability finding has been validated by the security team.",
        "type": "boolean"
      },
      "vector": {
        "description": "The vulnerability attack vector. (e.g. a CVSSv3 vector looks like this - 'AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N')",
        "type": "string"
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Firewall": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Firewall",
    "description": "A piece of hardware or software that protects a network/host/application.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of the Firewall. Indicates the scope that the Firewall applies to -- i.e. Network, Host, Application.",
        "type": "array",
        "items": {
          "type": "string",
          "enum": ["network", "host", "application", "other"]
        }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "isStateful": {
        "description": "Indicates if the rules in the firewall is stateful.",
        "type": "boolean"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Framework": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Framework",
    "description": "An object to represent a standard compliance or technical security framework.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string"
      },
      "displayName": { "description": "Display name", "type": "string" },
      "name": { "description": "Name of this entity", "type": "string" },
      "standard": {
        "description": "The name of the framework standard.",
        "type": "string",
        "examples": [
          "HIPAA",
          "NIST",
          "CSA STAR",
          "PCI DSS",
          "NIST CSF",
          "FedRAMP",
          "ISO 27001",
          "SOC",
          "OWASP",
          "Other"
        ]
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string"
      },
      "version": {
        "description": "The version of the framework. For example, OWASP may have version 2010, 2013, 2017.",
        "type": "string"
      }
    }
  },
  "#Function": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Function",
    "description": "A virtual application function. For example, an aws_lambda_function, azure_function, or google_cloud_function",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "codeHash": {
        "description": "The hash of code of this function.",
        "type": "string"
      },
      "codeSize": {
        "description": "The size of code of this function.",
        "type": "string"
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "handler": {
        "description": "The handler of this function",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "image": {
        "description": "The image of this function, typically refers to a zip package.",
        "type": "string"
      },
      "memorySize": {
        "description": "The allocated memory of this function to execute.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "runtime": {
        "description": "The runtime of this function. For example: 'nodejs6.10', 'nodejs8.10', or 'python2.7'.",
        "type": "string"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trigger": {
        "description": "What triggers this function to execute.",
        "type": "string"
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "version": {
        "description": "The version of this function.",
        "type": "string"
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Gateway": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Gateway",
    "description": "A gateway/proxy that can be a system/appliance or software service, such as a network router or application gateway.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of the Gateway (corresponds to which OSI layer does the Proxy operates at).",
        "type": "array",
        "items": {
          "type": "string",
          "enum": ["network", "application", "data", "other"]
        }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "function": {
        "description": "The function of the Gateway",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "routing",
            "nat",
            "api-gateway",
            "content-filtering",
            "content-distribution",
            "load-balancing",
            "firewall",
            "ssl-termination",
            "reverse-proxy",
            "remote-access-gateway",
            "application-protection",
            "intrusion-detection",
            "intrusion-prevention",
            "mail-filtering",
            "malware-protection",
            "other"
          ]
        }
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if the Gateway is open to public access",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#GraphObject": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#GraphObject",
    "description": "Standard metadata properties of a graph object, maintained by the system. These are visible to users but may not be directly modified.",
    "type": "object",
    "propertyNames": { "pattern": "^(_|tag\\.)?[A-Za-z0-9. -]+$" },
    "properties": {
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10
      },
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ]
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3
      }
    },
    "patternProperties": {
      "^tag\\.": {
        "description": "Named tags assigned to the entity (i.e., 'tag.Name', 'tag.OtherName')",
        "anyOf": [
          { "type": "string" },
          { "type": "number" },
          { "type": "boolean" }
        ]
      }
    },
    "required": ["_key", "_class", "_type"]
  },
  "#Group": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Group",
    "description": "A defined, generic group of Entities. This could represent a group of Resources, Users, Workloads, DataRepositories, etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Host": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Host",
    "description": "A compute instance that itself owns a whole network stack and serves as an environment for workloads. Typically it runs an operating system. The exact host type is described in the _type property of the Entity. The UUID of the host should be captured in the _id property of the Entity",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "fqdn": {
        "description": "Fully qualified domain name(s)",
        "anyOf": [
          { "type": "string" },
          {
            "type": "array",
            "uniqueItems": true,
            "items": { "type": "string" }
          }
        ]
      },
      "hostname": {
        "description": "The primary/local hostname",
        "type": ["string", "null"]
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "ipAddress": {
        "description": "A listing of all IP addresses associated with this Host",
        "anyOf": [
          { "type": "string", "format": "ip" },
          {
            "type": "array",
            "uniqueItems": true,
            "items": { "type": "string", "format": "ip" }
          }
        ]
      },
      "macAddress": {
        "description": "A listing of all MAC addresses associated with this Host",
        "anyOf": [
          { "type": "string" },
          {
            "type": "array",
            "uniqueItems": true,
            "items": { "type": "string" }
          }
        ]
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "osDetails": {
        "description": "Operating System Full Details (e.g. macOS High Sierra version 10.13.6)",
        "type": "string"
      },
      "osName": {
        "description": "Operating System Name (e.g. macOS)",
        "type": "string"
      },
      "osVersion": {
        "description": "Operating System Version (e.g. 10.13.6)",
        "type": "string"
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "physical": {
        "description": "Indicates if this is a physical host, such as a physical server.",
        "type": "boolean"
      },
      "platform": {
        "description": "Operating System Platform",
        "type": "string",
        "enum": [
          "darwin",
          "linux",
          "unix",
          "windows",
          "android",
          "ios",
          "embedded",
          "other"
        ]
      },
      "privateDnsName": {
        "description": "The private DNS name",
        "type": "string",
        "format": "hostname"
      },
      "privateIpAddress": {
        "description": "The private IP address or addresses",
        "anyOf": [
          { "type": "string", "format": "ip" },
          {
            "type": "array",
            "uniqueItems": true,
            "items": { "type": "string", "format": "ip" }
          }
        ]
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "publicDnsName": {
        "description": "The public DNS name",
        "type": "string",
        "format": "hostname"
      },
      "publicIpAddress": {
        "description": "The public IP address or addresses",
        "anyOf": [
          { "type": "string", "format": "ip" },
          {
            "type": "array",
            "uniqueItems": true,
            "items": { "type": "string", "format": "ip" }
          }
        ]
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "state": {
        "description": "The current state of a host (e.g. pending, running, shutting-down, terminated, stopping, stopped)",
        "type": "string"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#HostAgent": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#HostAgent",
    "description": "A software agent or sensor that runs on a host/endpoint.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "function": {
        "description": "The function of sensor/agent",
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "endpoint-compliance",
            "endpoint-configuration",
            "endpoint-protection",
            "anti-malware",
            "DLP",
            "FIM",
            "host-firewall",
            "HIDS",
            "log-monitor",
            "activity-monitor",
            "vulnerability-detection",
            "container-security",
            "other"
          ]
        }
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Image": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Image",
    "description": "A system image. For example, an AWS AMI (Amazon Machine Image).",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Incident": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Incident",
    "description": "An operational or security incident. An event that negatively affects the confidentiality, integrity or availability of an organization's assets.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of the incident",
        "type": "string",
        "examples": [
          "1. General Incident",
          "2. Attack on Internal Facing Assets",
          "3. Attack on External Facing Assets",
          "4. Malware",
          "5. Social Engineering",
          "6. Data Breach",
          "7. Physical or Environmental"
        ]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "impacts": {
        "description": "The target listing of [IDs/keys to] systems and resources this incident impacts.",
        "type": "array",
        "items": { "type": "string" }
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "postmortem": {
        "description": "Summary and/or a link to the documented lesson learned.",
        "type": "string"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "reportable": {
        "description": "Indicates if this is a reportable incident per applicable regulations, such as HIPAA, PCI, or GDPR.",
        "type": "boolean",
        "default": false
      },
      "reporter": {
        "description": "The person/entity who reported this incident.",
        "type": "string"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "severity": {
        "description": "Severity rating based on impact. Can be a string such as 'critical', 'major', 'minor', or an integer usually between 1-3.",
        "type": "string"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Internet": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Internet",
    "description": "The Internet node in the graph. There should be only one Internet node.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "CIDR": {
        "description": "The IPv4 network CIDR block",
        "type": "string",
        "const": "0.0.0.0/0"
      },
      "CIDRv6": {
        "description": "The IPv6 network CIDR block",
        "type": "string",
        "const": "::/0"
      },
      "displayName": {
        "description": "Display name",
        "type": "string",
        "const": "Internet"
      },
      "public": {
        "description": "Indicates if the network is open to public access",
        "type": "boolean",
        "const": true
      }
    }
  },
  "#IpAddress": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#IpAddress",
    "description": "An re-assignable IpAddress resource entity. Do not create an entity for an IP Address _configured_ on a Host. Use this only if the IP Address is a reusable resource, such as an Elastic IP Address object in AWS.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "dnsName": {
        "description": "The assigned DNS name",
        "type": "string",
        "format": "hostname"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "ipAddress": {
        "description": "The assigned IP address",
        "type": "string",
        "format": "ip"
      },
      "ipVersion": {
        "description": "Indicates IP version 4 or 6",
        "type": "integer",
        "default": 4,
        "enum": [4, 6]
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "privateIpAddress": {
        "description": "The assigned private IP address",
        "type": "string",
        "format": "ip"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "publicIpAddress": {
        "description": "The assigned public IP address",
        "type": "string",
        "format": "ip"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Issue": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Issue",
    "description": "An issue as used by GitHub, Jira, or other project trackers.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Key": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Key",
    "description": "An ssh-key, access-key, api-key/token, pgp-key, etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "fingerprint": {
        "description": "The fingerprint that identifies the key",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "material": { "description": "The key material", "type": "string" },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "usage": {
        "description": "The key usage - for example: ssh access or data encryption",
        "type": "string"
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Logs": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Logs",
    "description": "A specific repository or destination containing application, network, or system logs.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "type": {
        "description": "The type of logs",
        "type": "string",
        "examples": ["network", "system", "application", "access", "other"]
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Model": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Model",
    "description": "A system of postulates, data, and inferences presented as a mathematical description of an entity or state of affairs. For example, a machine learning model.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "encrypted": {
        "description": "Indicates whether the model is encrypted",
        "type": "boolean",
        "default": false
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Module": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Module",
    "description": "A software or hardware module. Such as an npm_module or java_library.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public module.",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Network": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Network",
    "description": "A network, such as an aws-vpc, aws-subnet, cisco-meraki-vlan.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "CIDR": {
        "description": "The IPv4 network CIDR block (e.g. 0.0.0.0/0)",
        "type": ["string", "null"],
        "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))?$"
      },
      "CIDRv6": {
        "description": "The IPv6 network CIDR block (e.g. ::/0)",
        "type": "string",
        "format": "ipv6"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "environment": {
        "description": "The environment of network",
        "type": "string",
        "examples": [
          "development",
          "test",
          "staging",
          "production",
          "private",
          "wireless",
          "guest",
          "remote-access",
          "administrative",
          "other"
        ]
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "internal": {
        "description": "Indicates if this is an internal/private network.",
        "type": "boolean"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if the network is publicly accessible.",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      },
      "wireless": {
        "description": "Indicates if this is a wireless network.",
        "type": "boolean"
      }
    }
  },
  "#NetworkEndpoint": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#NetworkEndpoint",
    "description": "A network endpoint for connecting to or accessing network resources. For example, NFS mount targets or VPN endpoints.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "ipAddress": {
        "description": "The endpoint IP address",
        "type": "string",
        "format": "ip"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#NetworkInterface": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#NetworkInterface",
    "description": "An re-assignable software defined network interface resource entity. Do not create an entity for a network interface _configured_ on a Host. Use this only if the network interface is a reusable resource, such as an Elastic Network Interface object in AWS.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "dnsName": {
        "description": "The assigned DNS name",
        "type": "string",
        "format": "hostname"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "ipAddress": {
        "description": "The assigned primary IP address",
        "type": "string",
        "format": "ip"
      },
      "ipVersion": {
        "description": "Indicates IP version 4 or 6",
        "type": "integer",
        "default": 4,
        "enum": [4, 6]
      },
      "macAddress": {
        "description": "The assigned MAC address",
        "type": "string",
        "format": "hostname"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "privateIpAddress": {
        "description": "The assigned private IP address",
        "type": "string",
        "format": "ip"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "publicIpAddress": {
        "description": "The assigned public IP address",
        "type": "string",
        "format": "ip"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Organization": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Organization",
    "description": "An organization, such as a company (e.g. JupiterOne) or a business unit (e.g. HR). An organization can be internal or external. Note that there is a more specific Vendor class.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of organization (within the context of the primary organization).",
        "type": "string",
        "examples": [
          "company",
          "department",
          "business-unit",
          "subsidiary",
          "government-agency",
          "partner",
          "other"
        ]
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "emailDomain": {
        "description": "The domain name for internal organization email addresses.",
        "type": "string"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "external": {
        "description": "Indicates if this organization is external",
        "type": "boolean"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      },
      "website": {
        "description": "The organization's main website URL.",
        "type": "string",
        "format": "uri"
      }
    }
  },
  "#PR": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#PR",
    "description": "A pull request.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "Indicates if every commit associated with this PR has been approved by a reviewer other than the code author.",
        "type": "boolean"
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "repository": {
        "description": "The name of the CodeRepo this PR belongs to.",
        "type": "string"
      },
      "source": { "description": "The source branch.", "type": "string" },
      "state": {
        "description": "The state of the PR.",
        "type": "string",
        "examples": ["open", "merged", "declined", "superseded"]
      },
      "summary": {
        "description": "The summary text of the PR.",
        "type": "string"
      },
      "target": {
        "description": "The target/destination branch.",
        "type": "string"
      },
      "title": { "description": "The title text of the PR.", "type": "string" },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if every commit associated with this PR was submitted by a validated author known to the organization.",
        "type": "boolean"
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#PasswordPolicy": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#PasswordPolicy",
    "description": "A password policy is a specific `Ruleset`. It is separately defined because of its pervasive usage across digital environments and the well known properties (such as length and complexity) unique to a password policy.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "autoUnlockMins": {
        "description": "Specifies the time interval (in minutes) a locked account remains locked before it is automatically unlocked (0 indicates no limit)",
        "type": "integer"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "excludeAttributes": {
        "description": "The user profile attributes whose values must be excluded from the password",
        "type": "array",
        "items": { "type": "string" }
      },
      "excludeCommonPasswords": {
        "description": "Indicates whether to check passwords against a common/weak password dictionary",
        "type": "boolean"
      },
      "excludeUsername": {
        "description": "Indicates if the username must be excluded from the password",
        "type": "boolean"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "expiryWarningDays": {
        "description": "Specifies the number of days prior to password expiration when a user will be warned to reset their password (0 indicates no warning)",
        "type": "integer"
      },
      "hardExpiry": {
        "description": "Specifies whether users are prevented from setting a new password after their password has expired",
        "type": "boolean"
      },
      "historyCount": {
        "description": "Specifies the number of previous passwords that users are prevented from reusing (0 indicates none)",
        "type": "integer"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "lockoutAttempts": {
        "description": "Specifies the number of times users can attempt to log in to their accounts with an invalid password before their accounts are locked (0 indicates no limit)",
        "type": "integer"
      },
      "maxAgeDays": {
        "description": "Specifies how long (in days) a password remains valid before it expires (0 indicates no limit - passwords do not expire)",
        "type": "integer"
      },
      "minAgeMins": {
        "description": "Specifies the minimum time interval (in minutes) between password changes (0 indicates no limit)",
        "type": "integer"
      },
      "minLength": {
        "description": "Minimum password length",
        "type": "integer"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "preventReset": {
        "description": "Indicates if the user is allowed/prevented to change their own password",
        "type": "boolean"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "requireLowercase": {
        "description": "Indicates if a password must contain at least one lowercase character",
        "type": "boolean"
      },
      "requireMFA": {
        "description": "Specifies whether multi-factor authentication (MFA) is required",
        "type": "boolean"
      },
      "requireNumbers": {
        "description": "Indicates if a password must contain at least one number",
        "type": "boolean"
      },
      "requireSymbols": {
        "description": "Indicates if a password must contain at least one symbol",
        "type": "boolean"
      },
      "requireUppercase": {
        "description": "Indicates if a password must contain at least one uppercase character",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Person": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Person",
    "description": "An entity that represents an actual person, such as an employee of an organization.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "address": {
        "description": "The person's physical contact address",
        "type": "string"
      },
      "backgroundCheckedBy": {
        "description": "The agency or person conducted the background/reference check",
        "type": "string"
      },
      "backgroundCheckedOn": {
        "description": "Timestamp of the background and/or reference check",
        "type": "number",
        "format": "date-time"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "email": {
        "description": "The email addresses of the person; the first one in the array is the primary email.",
        "type": "array",
        "items": { "type": "string", "format": "email" }
      },
      "emailDomain": {
        "description": "The domain portion of the email addresses associated with the user account.",
        "type": "array",
        "items": { "type": "string" }
      },
      "employeeId": {
        "description": "The person's employee ID/number within an organization",
        "type": "string"
      },
      "employeeType": {
        "description": "The type of employment",
        "type": "string",
        "examples": [
          "employee",
          "contractor",
          "intern",
          "vendor",
          "advisor",
          "other"
        ]
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "firstName": {
        "description": "The person's official first name in the system (such as HR database)",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "lastName": {
        "description": "The person's official last name in the system (such as HR database)",
        "type": "string"
      },
      "manager": {
        "description": "Name of the person's manager",
        "type": "string"
      },
      "managerEmail": {
        "description": "Email of the person's manager",
        "type": "string",
        "format": "email"
      },
      "managerId": {
        "description": "Employee ID of the person's manager",
        "type": "string"
      },
      "middleName": {
        "description": "The person's official middle name in the system (such as HR database)",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "phone": {
        "description": "The person's phone numbers; the first one in the array is the primary contact number.",
        "type": "array",
        "items": { "type": "string" }
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "title": {
        "description": "The person's role or title within an organization",
        "type": "string"
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "userIds": {
        "description": "One or more user Ids associated with this person",
        "type": "array",
        "items": { "type": "string" }
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Policy": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Policy",
    "description": "A written policy documentation.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "adopted": {
        "description": "Indicates if policy or procedure has been adopted. Only adopted policies and procedures are included in the published view of the Policy Builder app.",
        "type": "boolean"
      },
      "applicable": {
        "description": "Indicates if policy or procedure is applicable based on the organization's current risk and compliance needs. A Policy that is not applicable may become applicable later as the organization's requirements and maturity change.",
        "type": "boolean"
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "author": { "description": "Author of the record", "type": "string" },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the policy. For policies/procedures used by the Policy Builder app, this will contain the template text in markdown format. Stored in raw data.",
        "type": "string"
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "Summary or overview the describes the policy. Summary text is intended as guidance to the author and not included in the published version.",
        "type": "string"
      },
      "title": { "description": "Title of the policy", "type": "string" },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Problem": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Problem",
    "description": "A problem identified from the analysis and correlation of assets and findings that is a notable issue worthy of action. It could be (or become) the cause, or potential cause, of one or more incidents or findings.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "assessment": {
        "description": "The name/id of the assessment that produced this finding.",
        "type": "string",
        "inherited": true
      },
      "blocksProduction": {
        "description": "Indicates whether this vulnerability finding is a blocking issue. If true, it should block a production deploy. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "category": {
        "description": "The category of the finding.",
        "anyOf": [
          { "type": "string" },
          {
            "type": "array",
            "items": { "type": "string" },
            "examples": [
              "data",
              "application",
              "host",
              "network",
              "endpoint",
              "malware",
              "event"
            ]
          }
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "exploitability": {
        "description": "The exploitability score/rating.",
        "type": "number",
        "inherited": true
      },
      "impact": {
        "description": "The impact description or rating.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "numericSeverity": {
        "description": "Severity rating based on impact and exploitability.",
        "type": "number",
        "examples": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        "inherited": true
      },
      "open": {
        "description": "Indicates if this is an open vulnerability.",
        "type": "boolean",
        "inherited": true
      },
      "priority": {
        "description": "Priority level mapping to Severity rating. Can be a string such as 'critical', 'high', 'medium', 'low', 'info'.  Or an integer usually between 0-5.",
        "type": "string",
        "inherited": true
      },
      "production": {
        "description": "Indicates if this vulnerability is in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a publicly disclosed vulnerability. If yes, this is usually a CVE and the 'webLink' should be set to 'https://nvd.nist.gov/vuln/detail/${CVE-Number}' or to a vendor URL. If not, it is most likely a custom application vulnerability.",
        "type": "boolean",
        "inherited": true
      },
      "recommendation": {
        "description": "Recommendation on how to remediate/fix this finding.",
        "type": "string",
        "inherited": true
      },
      "references": {
        "description": "The array of links to references.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "remediationSLA": {
        "description": "The number of days that the Vulnerability must be remediated within, based on SLA set by the organization's internal vulnerability management program policy. The actually due date is set by 'remediationDueOn' property on the `IMPACTS` relationship between the Vulnerability and its impacted resource entity.",
        "type": "integer",
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "score": {
        "description": "The overall vulnerability score, e.g. CVSSv3.",
        "type": "number",
        "inherited": true
      },
      "severity": {
        "description": "Severity rating based on impact and exploitability.",
        "type": "string",
        "examples": [
          "none",
          "informational",
          "low",
          "medium",
          "high",
          "critical"
        ],
        "inherited": true
      },
      "status": {
        "description": "Status of the vulnerability",
        "type": "string",
        "inherited": true
      },
      "stepsToReproduce": {
        "description": "Steps to reproduce this finding.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "targetDetails": {
        "description": "Additional details about the targets. Can be a string or an array.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "targets": {
        "description": "The target listing of projects, applications, repos or systems this vulnerability impacts. Specifying either the project/repo name or the application URL here will auto-map this Vulnerability to the corresponding Project/CodeRepo/Application entity if a match is found.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this Vulnerability finding has been validated by the security team.",
        "type": "boolean",
        "inherited": true
      },
      "vector": {
        "description": "The vulnerability attack vector. (e.g. a CVSSv3 vector looks like this - 'AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N')",
        "type": "string",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Procedure": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Procedure",
    "description": "A written procedure and control documentation. A Procedure typically `IMPLEMENTS` a parent Policy. An actual Control further `IMPLEMENTS` a Procedure.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "adopted": {
        "description": "Indicates if procedure has been adopted. Only adopted policies and procedures are included in the published view of the Policy Builder app.",
        "type": "boolean"
      },
      "applicable": {
        "description": "Indicates if procedure is applicable based on the organization's current risk and compliance needs. A Policy that is not applicable may become applicable later as the organization's requirements and maturity change.",
        "type": "boolean"
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "author": { "description": "Author of the record", "type": "string" },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the policy. For policies/procedures used by the Policy Builder app, this will contain the template text in markdown format. Stored in raw data.",
        "type": "string"
      },
      "control": {
        "description": "The type of control specified by this procedure.",
        "type": "string",
        "examples": [
          "administrative",
          "technical",
          "physical",
          "operational",
          "other"
        ]
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "Summary or overview the describes the procedure. Summary text is intended as guidance to the author and not included in the published version.",
        "type": "string"
      },
      "title": { "description": "Title of the procedure", "type": "string" },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Process": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Process",
    "description": "A compute process -- i.e. an instance of a computer program / software application that is being executed by one or many threads. This is NOT a program level operational process (i.e. a Procedure).",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "state": {
        "description": "Indicates the state of the process.",
        "type": "string"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Product": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Product",
    "description": "A product developed by the organization, such as a software product.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "appLink": {
        "description": "App links/URLs related to this product.",
        "type": "array",
        "items": { "type": "string" }
      },
      "category": {
        "description": "Category that defines the product (e.g. 'web', 'mobile').",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "Description of the product",
        "type": "string"
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "projectKey": {
        "description": "Project key(s) that reference a Jira project, Bitbucket project, or similar related to this product.",
        "type": "array",
        "items": { "type": "string" }
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "statusPage": {
        "description": "Link to the status page of this product (for a SaaS product).",
        "type": "array",
        "items": { "type": "string" }
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Program": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Program",
    "description": "A program. For example, a bug bounty/vuln disclosure program.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "overview": { "description": "Program overview.", "type": "string" },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "type": { "description": "The type of program.", "type": "string" },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Project": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Project",
    "description": "A software development project. Can be used for other generic projects as well but the defined properties are geared towards software development projects.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "alternateURLs": {
        "description": "The additional URLs related to this application.",
        "type": "array",
        "items": { "type": "string" }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "devURL": {
        "description": "The Development URL",
        "type": "string",
        "format": "uri"
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "key": {
        "description": "A defined project key. It is ideal for a code project to have a consistent key that matches that of issue tracking project. For example, the key for a Bitbucket project should match the key of its corresponding Jira project.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "productionURL": {
        "description": "The Production URL",
        "type": "string",
        "format": "uri"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "stagingURL": {
        "description": "The Non-Production / Staging URL",
        "type": "string",
        "format": "uri"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "testURL": {
        "description": "The Test URL",
        "type": "string",
        "format": "uri"
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Question": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Question",
    "description": "An object that represents an inquiry, usually around some matter of uncertainty or difficulty.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "queries": {
        "description": "A request for information that contributes to answering a question.",
        "anyOf": [{ "type": "array", "items": { "type": "string" } }]
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Queue": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Queue",
    "description": "A scheduling queue of computing processes or devices.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "items": {
        "description": "The items (processes, devices, jobs, etc.) in the queue",
        "type": "array"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "priority": {
        "description": "The priority of the queue",
        "type": "number"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Record": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Record",
    "description": "A DNS record; or an official record (e.g. Risk); or a written document (e.g. Policy/Procedure); or a reference (e.g. Vulnerability/Weakness). The exact record type is captured in the _type property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#RecordEntity": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#RecordEntity",
    "description": "A node in the graph database that represents a Record Entity, with a set of different defined common properties than standard (resource) entities.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean"
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time"
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" }
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"]
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string"
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time"
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string"
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string"
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean"
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string"
      },
      "name": { "description": "Name of this entity", "type": "string" },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean"
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean"
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time"
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string"
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string"
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time"
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri"
      }
    }
  },
  "#Repository": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Repository",
    "description": "A repository that contains resources. For example, a Docker container registry repository hosting Docker container images.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public repo.",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Requirement": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Requirement",
    "description": "An individual requirement for security, compliance, regulation or design.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "state": {
        "description": "The state of the requirement (e.g. 'implemented').",
        "type": "string"
      },
      "summary": {
        "description": "The summary text of the requirement.",
        "type": "string"
      },
      "title": {
        "description": "The title text of the requirement.",
        "type": "string"
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Resource": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Resource",
    "description": "A generic assignable resource. A resource is typically non-functional by itself unless used by or attached to a host or workload.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Review": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Review",
    "description": "A review record.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "state": { "description": "The state of the review.", "type": "string" },
      "summary": {
        "description": "The summary text of the review.",
        "type": "string"
      },
      "title": {
        "description": "The title text of the review.",
        "type": "string"
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Risk": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Risk",
    "description": "An object that represents an identified Risk as the result of an Assessment. The collection of Risk objects in JupiterOne make up the Risk Register. A Control may have a `MITIGATES` relationship to a Risk.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "assessment": {
        "description": "The name/id of the assessment that produced this risk.",
        "type": "string"
      },
      "category": {
        "description": "The category (or area) of the risk. For example, 'process maturity' or 'natural disaster'.",
        "type": "string"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "details": {
        "description": "Additional details to describe the risk.",
        "type": "string"
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "impact": {
        "description": "Impact rating. '3: high/severe', '2: medium/moderate', '1: low/minor', '0: none/insignificant'.",
        "type": "integer",
        "examples": [0, 1, 2, 3]
      },
      "mitigation": {
        "description": "Description of the mitigation, either planned or implemented, if applicable.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "probability": {
        "description": "Probability rating of the risk: '3: high/certain', '2: medium/likely', '1: low/unlikely', '0: none/negligible'.",
        "type": "integer",
        "examples": [0, 1, 2, 3]
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "score": {
        "description": "Overall Risk Score = Probability x Impact",
        "type": "integer"
      },
      "status": {
        "description": "Current status of this documented risk. Default status is `open`.",
        "type": "string",
        "examples": [
          "reported",
          "acknowledged",
          "accepted",
          "mitigated",
          "prioritized",
          "transferred",
          "pending",
          "open"
        ]
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Root": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Root",
    "description": "The root node in the graph. There should be only one Root node per organization account.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "displayName": { "description": "Display name", "type": "string" }
    }
  },
  "#Rule": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Rule",
    "description": "An operational or configuration compliance rule, often part of a Ruleset.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of ruleset.",
        "type": "string",
        "examples": ["compliance", "config", "password", "other"]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "content": {
        "description": "Contents of the rule, if applicable.",
        "type": "string"
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Ruleset": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Ruleset",
    "description": "An operational or configuration compliance ruleset with rules that govern (or enforce, evaluate, monitor) a security control or IT system.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of ruleset.",
        "type": "string",
        "examples": ["compliance", "config", "password", "other"]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "content": {
        "description": "Contents of the raw rules, if applicable.",
        "type": "string"
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "rules": {
        "description": "Rules of ruleset. Each rule is written 'as-code' that can be operationalized with a control provider or within JupiterOne's rules engine.",
        "type": "array",
        "items": { "type": "string" }
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Scanner": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Scanner",
    "description": "A system vulnerability, application code or network infrastructure scanner.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of scanner",
        "type": "array",
        "items": {
          "type": "string",
          "examples": ["system", "network", "application", "other"]
        }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Secret": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Secret",
    "description": "A stored encrypted secret, accessed by permitted users or applications.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Section": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Section",
    "description": "An object to represent a section such as a compliance section.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Service": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Service",
    "description": "A service provided by a vendor.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "The category of service, e.g. software, platform, infrastructure, other",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "software",
            "platform",
            "infrastructure",
            "physical",
            "network",
            "application",
            "security",
            "other"
          ]
        }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "endpoints": {
        "description": "Array of service endpoints, e.g. ec2.amazonaws.com",
        "type": "array",
        "items": { "type": "string" }
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "fedrampModerate": {
        "description": "Indicates whether this service is compliant with FedRAMP Moderate",
        "type": "boolean"
      },
      "function": {
        "description": "The functions provided by the service, e.g. access-review, database, load-balancing, other",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "access-review",
            "api-gateway",
            "auditing",
            "caching",
            "certificate-management",
            "config-auditing",
            "content-distribution",
            "container-orchestration",
            "container-registry",
            "compute",
            "database",
            "data-analytics",
            "data-warehousing",
            "ddos-protection",
            "desktop-virtualization",
            "DLP",
            "DNS",
            "email",
            "encryption",
            "file-system",
            "IAM",
            "indexing",
            "key-management",
            "kubernetes-management",
            "load-balancing",
            "logging",
            "monitoring",
            "networking",
            "notification",
            "password-management",
            "provisioning",
            "queuing",
            "scheduling",
            "serverless",
            "SFTP",
            "SIEM",
            "storage",
            "VAS",
            "WAF",
            "workflow",
            "workload-management",
            "other"
          ]
        }
      },
      "hipaaEligible": {
        "description": "Indicates whether this service is HIPPA eligible",
        "type": "boolean"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Site": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Site",
    "description": "The physical location of an organization. A Person (i.e. employee) would typically has a relationship to a Site (i.e. located_at or work_at). Also used as the abstract reference to AWS Regions.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "category": {
        "description": "Type of site",
        "type": "array",
        "items": {
          "type": "string",
          "examples": [
            "headquarters",
            "branch",
            "campus",
            "office",
            "aws-region",
            "data-center",
            "lab",
            "other"
          ]
        }
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "hours": {
        "description": "Hours of operation. e.g. M-F 9am-6pm",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "location": {
        "description": "The address/location of the site. Or an AWS Region (e.g. us-east-2).",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "restricted": {
        "description": "Indicates that access to the site is restricted (a level above secured access).",
        "type": "boolean"
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "secured": {
        "description": "Indicates the site is secured with physical controls such as key card access and surveillance cameras.",
        "type": "boolean"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Standard": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Standard",
    "description": "An object to represent a standard such as a compliance or technical standard.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "The name of the standard.",
        "type": "string",
        "examples": [
          "HIPAA",
          "NIST",
          "CSA STAR",
          "PCI DSS",
          "NIST CSF",
          "FedRAMP",
          "ISO 27001",
          "SOC",
          "OWASP",
          "Other"
        ]
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "version": {
        "description": "The version of the standard. For example, OWASP may have version 2010, 2013, 2017.",
        "type": "string"
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Subscription": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Subscription",
    "description": "A subscription to a service or channel.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "authenticated": {
        "description": "Indicates whether the subscription is authenticated.",
        "type": "boolean"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "pending": {
        "description": "Indicates whether the subscription is pending.",
        "type": "boolean"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Task": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Task",
    "description": "A computational task. Examples include AWS Batch Job, ECS Task, etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Team": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Team",
    "description": "A team consists of multiple member Person entities. For example, the Development team or the Security team.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "email": {
        "description": "The team email address",
        "type": "string",
        "format": "email"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#ThreatIntel": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#ThreatIntel",
    "description": "Threat intelligence captures information collected from vulnerability risk analysis by those with substantive expertise and access to all-source information. Threat intelligence helps a security professional determine the risk of a vulnerability finding to their organization.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "references": {
        "description": "The array of links to references.",
        "type": "array",
        "items": { "type": "string" }
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Training": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Training",
    "description": "A training module, such as a security awareness training or secure development training.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the official record",
        "type": "string",
        "examples": [
          "exception",
          "finding",
          "hr",
          "incident",
          "issue",
          "job",
          "legal",
          "request",
          "policy",
          "procedure",
          "problem",
          "review",
          "risk",
          "other"
        ],
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#User": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#User",
    "description": "A user account/login to access certain systems and/or services. Examples include okta-user, aws-iam-user, ssh-user, local-user (on a host), etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Specifies whether user account is active or disabled.",
        "type": "boolean"
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "email": {
        "description": "The primary email address associated with the user account",
        "type": "string",
        "format": "email"
      },
      "emailDomain": {
        "description": "The domain portion of the email addresses associated with the user account.",
        "type": "array",
        "items": { "type": "string" }
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "firstName": {
        "description": "The user's official first name in the system (such as HR database)",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "lastName": {
        "description": "The user's official last name in the system (such as HR database)",
        "type": "string"
      },
      "mfaEnabled": {
        "description": "Specifies whether multi-factor authentication (MFA) is enabled for this user.",
        "type": "boolean"
      },
      "mfaType": {
        "description": "Specifies what type of multi-factor authentication (MFA) is being used by this user.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "passwordChangedOn": {
        "description": "The timestamp (in milliseconds since epoch) of when the user's password was last rotated for this particular account.",
        "type": "number",
        "format": "date-time"
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "shortLoginId": {
        "description": "The shortened login Id. For example, if the username is the full email address (first.last@company.com), the shortLoginId would be the part before @ (first.last).",
        "type": "string"
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "username": { "description": "Username", "type": "string" },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#UserGroup": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#UserGroup",
    "description": "A user group, typically associated with some type of access control, such as a group in Okta or in Office365. If a UserGroup has an access policy attached, and all member Users of the UserGroup would inherit the policy.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "email": {
        "description": "The group email address",
        "type": "string",
        "format": "email"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Vault": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Vault",
    "description": "A collection of secrets such as a key ring",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": { "description": "Name of the vault", "type": "string" },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Vendor": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Vendor",
    "description": "An external organization that is a vendor or service provider.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "admins": {
        "description": "List of admin users to the vendor account, if applicable. If this vendor account is integrated directly to JupiterOne and its data is ingested, the admin users should be already mapped as User entities.",
        "type": "array",
        "items": { "type": "string" }
      },
      "alternateContactAddress": {
        "description": "Alternate/secondary physical/mailing address of the vendor.",
        "type": "string"
      },
      "alternateContactEmail": {
        "description": "Email of the vendor's alternate/secondary point of contact person.",
        "type": "string",
        "format": "email"
      },
      "alternateContactName": {
        "description": "The vendor's alternate/secondary point of contact person.",
        "type": "string"
      },
      "alternateContactPhone": {
        "description": "Phone number of the vendor's alternate/secondary point of contact person.",
        "type": "string"
      },
      "alternateContactTitle": {
        "description": "The title of the vendor's alternate/secondary point of contact. For example, 'CISO'.",
        "type": "string"
      },
      "breachResponseDays": {
        "description": "The number of days the vendor agrees to report an identified data breach, per vendor agreement and/or SLA. This is typically 3 to 30 days. Note that GDPR requires breach notification within 3 days / 72 hours.",
        "type": "integer"
      },
      "category": {
        "description": "The category of vendor.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "examples": [
          "business-operations",
          "cloud",
          "facilities",
          "finance",
          "infrastructure",
          "legal",
          "purchasing",
          "security",
          "software",
          "platform-development",
          "platform-social-media",
          "professional-services-staffing",
          "professional-services-recruiting",
          "professional-services-consulting",
          "generic-service-provider",
          "generic-subscription",
          "CSP",
          "ISP",
          "MSP",
          "MSSP",
          "IdP",
          "other"
        ]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "departments": {
        "description": "List of business departments the vendor provides service for (e.g. IT, HR, Finance, Marketing, Development/Engineering, Security).",
        "type": "array",
        "items": { "type": "string" }
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "emailDomain": {
        "description": "The email domain for the vendor (e.g. @jupiterone.io).",
        "type": "string"
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "linkToBAA": {
        "description": "Link to Business Associate Agreement (BAA) document - for HIPAA only.",
        "type": "string",
        "format": "uri"
      },
      "linkToDPA": {
        "description": "Link to GDPR Data Processing Addendum (DPA) document - for GDPR only.",
        "type": "string",
        "format": "uri"
      },
      "linkToISA": {
        "description": "Link to the external information security assessment (ISA) report.",
        "type": "string",
        "format": "uri"
      },
      "linkToMSA": {
        "description": "Link to Master Service Agreement (MSA) document.",
        "type": "string",
        "format": "uri"
      },
      "linkToNDA": {
        "description": "Link to Non-Disclosure Agreement (NDA) document.",
        "type": "string",
        "format": "uri"
      },
      "linkToSLA": {
        "description": "Link to Service Level Agreement (SLA) document.",
        "type": "string",
        "format": "uri"
      },
      "linkToVTR": {
        "description": "Link to the external vendor technology risk (VTR) report.",
        "type": "string",
        "format": "uri"
      },
      "mainContactAddress": {
        "description": "Main physical/mailing address of the vendor.",
        "type": "string"
      },
      "mainContactEmail": {
        "description": "Email of the vendor's point of contact person.",
        "type": "string",
        "format": "email"
      },
      "mainContactName": {
        "description": "The vendor's point of contact person.",
        "type": "string"
      },
      "mainContactPhone": {
        "description": "Phone number of the vendor's point of contact person.",
        "type": "string"
      },
      "mainContactTitle": {
        "description": "The title of the vendor's main point of contact. For example, 'Manager of Operations'.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "statusPage": {
        "description": "Link to the vendor's service status page (e.g. https://status.aws.amazon.com/).",
        "type": "string",
        "format": "uri"
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "validatedOn": {
        "description": "The timestamp (in milliseconds since epoch) of when this vendor was last validated per the vendor management policy.",
        "type": "number",
        "format": "date-time"
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      },
      "website": {
        "description": "The vendor's main website URL.",
        "type": "string",
        "format": "uri"
      }
    }
  },
  "#Vulnerability": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Vulnerability",
    "description": "A security vulnerability (application or system or infrastructure). A single vulnerability may relate to multiple findings and impact multiple resources. The `IMPACTS` relationship between the Vulnerability and the resource entity that was impacted serves as the record of the finding. The `IMPACTS` relationship carries properties such as 'identifiedOn', 'remediatedOn', 'remediationDueOn', 'issueLink', etc.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "blocking": {
        "description": "Indicates whether this vulnerability finding is a blocking issue. If true, it should block a production deploy. Defaults to false.",
        "type": ["boolean", "null"],
        "default": false
      },
      "category": {
        "description": "The category of the vulnerability finding",
        "type": ["string", "null"],
        "examples": ["application", "system", "infrastructure", "other"]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "exploitability": {
        "description": "The exploitability score/rating.",
        "type": "number"
      },
      "impact": { "description": "The impact score/rating.", "type": "number" },
      "impacts": {
        "description": "The target listing of projects, applications, repos or systems this vulnerability impacts. Specifying either the project/repo name or the application URL here will auto-map this Vulnerability to the corresponding Project/CodeRepo/Application entity if a match is found.",
        "type": "array",
        "items": { "type": "string" }
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this is an open vulnerability.",
        "type": ["boolean", "null"]
      },
      "priority": {
        "description": "Priority level mapping to Severity rating. Can be a string such as 'critical', 'high', 'medium', 'low', 'info'.  Or an integer usually between 0-5.",
        "type": "string"
      },
      "production": {
        "description": "Indicates if this vulnerability is in production.",
        "type": ["boolean", "null"]
      },
      "public": {
        "description": "Indicates if this is a publicly disclosed vulnerability. If yes, this is usually a CVE and the 'webLink' should be set to 'https://nvd.nist.gov/vuln/detail/${CVE-Number}' or to a vendor URL. If not, it is most likely a custom application vulnerability.",
        "type": ["boolean", "null"]
      },
      "references": {
        "description": "The array of links to references.",
        "type": "array",
        "items": { "type": "string" }
      },
      "remediationSLA": {
        "description": "The number of days that the Vulnerability must be remediated within, based on SLA set by the organization's internal vulnerability management program policy. The actually due date is set by 'remediationDueOn' property on the `IMPACTS` relationship between the Vulnerability and its impacted resource entity.",
        "type": "integer"
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "score": {
        "description": "The overall vulnerability score, e.g. CVSSv3.",
        "type": "number"
      },
      "severity": {
        "description": "Severity rating based on impact and exploitability. Can be a string such as 'critical', 'high', 'medium', 'low', 'info'.  Or an integer usually between 0-5.",
        "type": ["string", "null"]
      },
      "status": {
        "description": "Status of the vulnerability",
        "type": "string"
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this Vulnerability finding has been validated by the security team.",
        "type": "boolean"
      },
      "vector": {
        "description": "The vulnerability attack vector. (e.g. a CVSSv3 vector looks like this - 'AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N')",
        "type": "string"
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Weakness": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Weakness",
    "description": "A security weakness.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "approved": {
        "description": "If this is record has been reviewed and approved.",
        "type": "boolean",
        "inherited": true
      },
      "approvedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was approved.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "approvers": {
        "description": "The list of approvers on the record.",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "category": {
        "description": "The category of the vulnerability finding",
        "type": "string",
        "examples": ["application", "system", "infrastructure", "other"]
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme. For example: critical - confidential - internal - public.",
        "type": "string",
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "content": {
        "description": "Text content of the record/documentation",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "exception": {
        "description": "Indicates if this record has an applied exception. For example, exception for a known finding or a PR that is not fully approved.",
        "type": "boolean",
        "inherited": true
      },
      "exceptionReason": {
        "description": "Reason / description of the exception.",
        "type": "string",
        "inherited": true
      },
      "exploitability": {
        "description": "Indicates the likelihood of exploit.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "open": {
        "description": "Indicates if this record is currently open. For example, an open Vulnerability finding (Vulnerability extends Record).",
        "type": "boolean",
        "inherited": true
      },
      "production": {
        "description": "If this is a production record. For example, a production change management ticket would have this set to `true`, and have a `category` = `change` property. Another example would be a Vulnerability finding in production.",
        "type": "boolean",
        "inherited": true
      },
      "public": {
        "description": "If this is a public record. Defaults to false.",
        "type": "boolean",
        "default": false,
        "inherited": true
      },
      "references": {
        "description": "The array of links to references.",
        "type": "array",
        "items": { "type": "string" }
      },
      "reportedOn": {
        "description": "The timestamp (in milliseconds since epoch) when this record was reported/opened. In most cases, this would be the same as `createdOn` but occasionally a record can be created at a different time than when it was first reported.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "reporter": {
        "description": "The person or system that reported or created this record.",
        "type": "string",
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "webLink": {
        "description": "Hyperlink to the location of this record, e.g. URL to a Jira issue",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Workflow": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Workflow",
    "description": "A workflow such as an AWS CodePipeline, GitHub repository workflow, or Apache Airflow.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "name": { "description": "Name of the workflow", "type": "string" },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  },
  "#Workload": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "#Workload",
    "description": "A virtual compute instance, it could be an aws-ec2-instance, a docker-container, an aws-lambda-function, an application-process, or a vmware-instance. The exact workload type is described in the _type property of the Entity.",
    "type": "object",
    "properties": {
      "_class": {
        "description": "One or more classes conforming to a standard, abstract security data model. For example, an EC2 instance will have '_class':'Host'.",
        "oneOf": [
          { "type": "string", "minLength": 2 },
          {
            "type": "array",
            "minItems": 1,
            "items": { "type": "string", "minLength": 2 }
          }
        ],
        "inherited": true
      },
      "_key": {
        "description": "An identifier unique within the scope containing the object. For example, for a Bitbucket repo, this will be the GUID of the repo as assigned by Bitbucket. For an IAM Role, this will be the ARN of the role.",
        "type": "string",
        "minLength": 10,
        "inherited": true
      },
      "_type": {
        "description": "The type of object, typically reflecting the vendor and resource type. For example, 'aws_iam_user'. In some cases, a system knows about a type of entity that other systems know about, such as 'user_endpoint' or 'cve'.",
        "type": "string",
        "minLength": 3,
        "inherited": true
      },
      "active": {
        "description": "Indicates if this entity is currently active.",
        "type": "boolean",
        "inherited": true
      },
      "classification": {
        "description": "The sensitivity of the data; should match company data classification scheme",
        "type": ["string", "null"],
        "examples": ["critical", "confidential", "internal", "public"],
        "inherited": true
      },
      "complianceStatus": {
        "description": "The compliance status of the entity, as a percentage of compliancy.",
        "type": "number",
        "minimum": 0,
        "maximum": 1,
        "inherited": true
      },
      "createdBy": {
        "description": "The source/principal/user that created the entity",
        "type": "string",
        "inherited": true
      },
      "createdOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was created at the source. This is different than `_createdOn` which is the timestamp the entity was first ingested into JupiterOne.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "criticality": {
        "description": "A number that represents the value or criticality of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "deletedBy": {
        "description": "The source/principal/user that deleted the entity",
        "type": "string",
        "inherited": true
      },
      "deletedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was deleted at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "description": {
        "description": "An extended description of this entity.",
        "type": "string",
        "inherited": true
      },
      "discoveredBy": {
        "description": "The source/principal/user that discovered the entity",
        "type": "string",
        "inherited": true
      },
      "discoveredOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was discovered.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "displayName": {
        "description": "Display name, e.g. a person's preferred name or an AWS account alias",
        "type": "string",
        "inherited": true
      },
      "expiresOn": {
        "description": "If the entity is a temporary resource, optionally set the expiration date. For example, the expiration date of an SSL cert.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "fqdn": {
        "description": "The fully qualified domain name of attached to the instance, if applicable",
        "type": "string"
      },
      "id": {
        "description": "Identifiers of this entity assigned by the providers. Values are expected to be unique within the provider scope.",
        "anyOf": [
          { "type": "string" },
          { "type": "array", "items": { "type": "string" } }
        ],
        "inherited": true
      },
      "image": {
        "description": "The image this workload is derived from, such as an AMI or docker image. At the abstract level, this usually maps to the _id of a Resource.",
        "type": "string"
      },
      "name": {
        "description": "Name of this entity",
        "type": "string",
        "inherited": true
      },
      "notes": {
        "description": "User provided notes about this entity",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "owner": {
        "description": "The owner of this entity. This could reference the name of the owner, or as reference ID/key to another entity in the graph as the owner.",
        "type": "string",
        "inherited": true
      },
      "public": {
        "description": "Indicates if this is a public-facing resource (e.g. a public IP or public DNS record) or if the entity is publicly accessible. Default is false.",
        "type": "boolean",
        "inherited": true
      },
      "risk": {
        "description": "The risk level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "status": {
        "description": "Status of this entity set by the external source system or by a user, e.g. Active, Inactive, Decommissioned",
        "type": "string",
        "examples": [
          "active",
          "inactive",
          "suspended",
          "terminated",
          "open",
          "closed",
          "pending",
          "unknown",
          "other"
        ],
        "inherited": true
      },
      "summary": {
        "description": "A summary / short description of this entity.",
        "type": "string",
        "inherited": true
      },
      "tags": {
        "description": "An array of unnamed tags",
        "type": "array",
        "items": { "type": "string" },
        "inherited": true
      },
      "temporary": {
        "description": "Indicates if this node is a temporary resource, such as a lambda instance or an EC2 instance started by ECS.",
        "type": "boolean",
        "inherited": true
      },
      "trust": {
        "description": "The trust level of this entity, on a scale between 1-10.",
        "type": "integer",
        "minimum": 1,
        "maximum": 10,
        "inherited": true
      },
      "trusted": {
        "description": "Indicates if this is a trusted resource. For example, a trusted Network, Host, Device, Application, Person, User, or Vendor.",
        "type": "boolean",
        "inherited": true
      },
      "updatedBy": {
        "description": "The source/principal/user that updated the entity",
        "type": "string",
        "inherited": true
      },
      "updatedOn": {
        "description": "The timestamp (in milliseconds since epoch) when the entity was last updated at the source.",
        "type": "number",
        "format": "date-time",
        "inherited": true
      },
      "validated": {
        "description": "Indicates if this node has been validated as a known/valid Entity.",
        "type": "boolean",
        "inherited": true
      },
      "webLink": {
        "description": "Web link to the source. For example: https://console.aws.amazon.com/iam/home#/roles/Administrator. This property is used by the UI to add a hyperlink to the entity.",
        "type": "string",
        "format": "uri",
        "inherited": true
      }
    }
  }
}
